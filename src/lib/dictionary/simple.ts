import type { Dictionary } from '$lib/dictionary';
import type { SearchSpec } from '$lib/search';
import type { Word } from '$lib/word';

const alphagram = (word: string): string => {
	return [...word].sort().join('');
};

const WORDS = new Set([
	'ENTASIA',
	'TAENIAS',
	'BANTIES',
	'BASINET',
	'ACETINS',
	'CINEAST',
	'DESTAIN',
	'DETAINS',
	'INSTEAD',
	'NIDATES',
	'SAINTED',
	'SATINED',
	'STAINED',
	'ETESIAN',
	'FAINEST',
	'EASTING',
	'EATINGS',
	'GENISTA',
	'INGATES',
	'INGESTA',
	'SEATING',
	'TAGINES',
	'TEASING',
	'SHEITAN',
	'STHENIA',
	'ISATINE',
	'TAJINES',
	'INTAKES',
	'ELASTIN',
	'ENTAILS',
	'NAILSET',
	'SALIENT',
	'SALTINE',
	'SLAINTE',
	'TENAILS',
	'ETAMINS',
	'INMATES',
	'TAMEINS',
	'INANEST',
	'STANINE',
	'ATONIES',
	'PANTIES',
	'PATINES',
	'SAPIENT',
	'SPINATE',
	'ANESTRI',
	'ANTSIER',
	'NASTIER',
	'RATINES',
	'RETAINS',
	'RETINAS',
	'RETSINA',
	'STAINER',
	'STEARIN',
	'ENTASIS',
	'NASTIES',
	'SEITANS',
	'SESTINA',
	'TANSIES',
	'TISANES',
	'INSTATE',
	'SATINET',
	'AUNTIES',
	'SINUATE',
	'NAIVEST',
	'NATIVES',
	'VAINEST',
	'TAWNIES',
	'WANIEST',
	'ANTISEX',
	'SEXTAIN',
	'ZANIEST',
	'ZEATINS',
	'ADZ',
	'ADZE',
	'AJAR',
	'AJEE',
	'AJI',
	'AJIS',
	'APEX',
	'AQUA',
	'AX',
	'AXAL',
	'AXE',
	'AXED',
	'AXEL',
	'AXES',
	'AXIL',
	'AXIS',
	'AXLE',
	'AXON',
	'AZAN',
	'AZO',
	'AZON',
	'BAZZ',
	'BIZ',
	'BIZE',
	'BOX',
	'BOXY',
	'BOZO',
	'BRUX',
	'BUZZ',
	'CALX',
	'CAZH',
	'CHEZ',
	'CINQ',
	'COAX',
	'COX',
	'COXA',
	'COZ',
	'COZY',
	'CRUX',
	'CUZ',
	'CZAR',
	'DAZE',
	'DEX',
	'DEXY',
	'DITZ',
	'DJIN',
	'DOJO',
	'DOUX',
	'DOXY',
	'DOZE',
	'DOZY',
	'EAUX',
	'EX',
	'EXAM',
	'EXEC',
	'EXED',
	'EXES',
	'EXIT',
	'EXON',
	'EXPO',
	'FALX',
	'FAUX',
	'FAX',
	'FAZE',
	'FEZ',
	'FIX',
	'FIXT',
	'FIZ',
	'FIZZ',
	'FLAX',
	'FLEX',
	'FLUX',
	'FOX',
	'FOXY',
	'FOZY',
	'FRIZ',
	'FUJI',
	'FUTZ',
	'FUZE',
	'FUZZ',
	'GAZE',
	'GEEZ',
	'GOJI',
	'GOX',
	'GRIZ',
	'HADJ',
	'HAJ',
	'HAJI',
	'HAJJ',
	'HAZE',
	'HAZY',
	'HEX',
	'HOAX',
	'IBEX',
	'ILEX',
	'IXIA',
	'IZAR',
	'JAB',
	'JABS',
	'JACK',
	'JADE',
	'JAG',
	'JAGG',
	'JAGS',
	'JAIL',
	'JAKE',
	'JAM',
	'JAMB',
	'JAMS',
	'JANE',
	'JAPE',
	'JAR',
	'JARL',
	'JARS',
	'JATO',
	'JAUK',
	'JAUP',
	'JAVA',
	'JAW',
	'JAWS',
	'JAY',
	'JAYS',
	'JAZZ',
	'JEAN',
	'JEE',
	'JEED',
	'JEEP',
	'JEER',
	'JEES',
	'JEEZ',
	'JEFE',
	'JEHU',
	'JELL',
	'JEON',
	'JERK',
	'JESS',
	'JEST',
	'JET',
	'JETE',
	'JETS',
	'JEU',
	'JEUX',
	'JIAO',
	'JIB',
	'JIBB',
	'JIBE',
	'JIBS',
	'JIFF',
	'JIG',
	'JIGS',
	'JILL',
	'JILT',
	'JIMP',
	'JIN',
	'JINK',
	'JINN',
	'JINS',
	'JINX',
	'JIRD',
	'JISM',
	'JIVE',
	'JIVY',
	'JIZZ',
	'JO',
	'JOB',
	'JOBS',
	'JOCK',
	'JOE',
	'JOES',
	'JOEY',
	'JOG',
	'JOGS',
	'JOHN',
	'JOIN',
	'JOKE',
	'JOKY',
	'JOLE',
	'JOLT',
	'JOOK',
	'JOSH',
	'JOSS',
	'JOT',
	'JOTA',
	'JOTS',
	'JOUK',
	'JOW',
	'JOWL',
	'JOWS',
	'JOY',
	'JOYS',
	'JUBA',
	'JUBE',
	'JUCO',
	'JUDO',
	'JUDY',
	'JUG',
	'JUGA',
	'JUGS',
	'JUJU',
	'JUKE',
	'JUKU',
	'JUMP',
	'JUN',
	'JUNK',
	'JUPE',
	'JURA',
	'JURY',
	'JUS',
	'JUST',
	'JUT',
	'JUTE',
	'JUTS',
	'KEX',
	'KOJI',
	'LAX',
	'LAZE',
	'LAZY',
	'LEX',
	'LOX',
	'LUTZ',
	'LUX',
	'LUXE',
	'LYNX',
	'MAX',
	'MAXI',
	'MAZE',
	'MAZY',
	'MEZE',
	'MINX',
	'MIX',
	'MIXT',
	'MOJO',
	'MOXA',
	'MOZO',
	'MUX',
	'NAZI',
	'NEXT',
	'NIX',
	'NIXE',
	'NIXY',
	'ONYX',
	'OOZE',
	'OOZY',
	'ORYX',
	'ORZO',
	'OUZO',
	'OX',
	'OXEN',
	'OXER',
	'OXES',
	'OXIC',
	'OXID',
	'OXIM',
	'OXO',
	'OXY',
	'OYEZ',
	'PAX',
	'PHIZ',
	'PIX',
	'PIXY',
	'PLEX',
	'POX',
	'POXY',
	'PREX',
	'PREZ',
	'PUJA',
	'PUTZ',
	'PYX',
	'QADI',
	'QAID',
	'QAT',
	'QATS',
	'QI',
	'QIS',
	'QOPH',
	'QUA',
	'QUAD',
	'QUAG',
	'QUAI',
	'QUAY',
	'QUEY',
	'QUID',
	'QUIN',
	'QUIP',
	'QUIT',
	'QUIZ',
	'QUOD',
	'RAJ',
	'RAJA',
	'RAX',
	'RAZE',
	'RAZZ',
	'REX',
	'REZ',
	'RITZ',
	'ROUX',
	'SAX',
	'SEX',
	'SEXT',
	'SEXY',
	'SEZ',
	'SIX',
	'SIZE',
	'SIZY',
	'SOJA',
	'SOJU',
	'SOX',
	'SUQ',
	'SUQS',
	'TAJ',
	'TAX',
	'TAXA',
	'TAXI',
	'TEXT',
	'TIX',
	'TIZ',
	'TIZZ',
	'TUX',
	'TZAR',
	'VEX',
	'VEXT',
	'VOX',
	'WAX',
	'WAXY',
	'WHIZ',
	'WIZ',
	'WUZ',
	'XED',
	'XI',
	'XIS',
	'XU',
	'XYST',
	'YEZ',
	'YUTZ',
	'YUZU',
	'ZA',
	'ZAG',
	'ZAGS',
	'ZANY',
	'ZAP',
	'ZAPS',
	'ZARF',
	'ZAS',
	'ZAX',
	'ZEAL',
	'ZEBU',
	'ZED',
	'ZEDA',
	'ZEDS',
	'ZEE',
	'ZEES',
	'ZEIN',
	'ZEK',
	'ZEKS',
	'ZEN',
	'ZEP',
	'ZEPS',
	'ZERK',
	'ZERO',
	'ZEST',
	'ZETA',
	'ZIG',
	'ZIGS',
	'ZILL',
	'ZIN',
	'ZINC',
	'ZINE',
	'ZING',
	'ZINS',
	'ZIP',
	'ZIPS',
	'ZIT',
	'ZITI',
	'ZITS',
	'ZIZZ',
	'ZOA',
	'ZOEA',
	'ZOIC',
	'ZONA',
	'ZONE',
	'ZONK',
	'ZOO',
	'ZOOM',
	'ZOON',
	'ZOOS',
	'ZORI',
	'ZOUK',
	'ZUZ',
	'ZYME',
	'ZZZ',
	'CERATIN',
	'CERTAIN',
	'CREATIN',
	'TACRINE',
	'ANTIRED',
	'DETRAIN',
	'TRAINED',
	'ARENITE',
	'RETINAE',
	'TRAINEE',
	'FAINTER',
	'GRANITE',
	'GRATINE',
	'INGRATE',
	'TANGIER',
	'TEARING',
	'HAIRNET',
	'INEARTH',
	'THERIAN',
	'INERTIA',
	'KERATIN',
	'LATRINE',
	'RATLINE',
	'RELIANT',
	'RETINAL',
	'TRENAIL',
	'MINARET',
	'RAIMENT',
	'ENTRAIN',
	'TRANNIE',
	'PAINTER',
	'PERTAIN',
	'REPAINT',
	'RETRAIN',
	'TERRAIN',
	'TRAINER',
	'ANESTRI',
	'ANTSIER',
	'NASTIER',
	'RATINES',
	'RETAINS',
	'RETINAS',
	'RETSINA',
	'STAINER',
	'STEARIN',
	'INTREAT',
	'ITERANT',
	'NATTIER',
	'NITRATE',
	'TERTIAN',
	'RUINATE',
	'TAURINE',
	'URANITE',
	'URINATE',
	'TAWNIER',
	'TINWARE',
	'ARISTAE',
	'ASTERIA',
	'ATRESIA',
	'BAITERS',
	'BARITES',
	'REBAITS',
	'TERBIAS',
	'ATRESIC',
	'CRISTAE',
	'RACIEST',
	'STEARIC',
	'ARIDEST',
	'ASTRIDE',
	'DIASTER',
	'DISRATE',
	'STAIDER',
	'TARDIES',
	'TIRADES',
	'AERIEST',
	'SERIATE',
	'FAIREST',
	'AIGRETS',
	'GAITERS',
	'SEAGIRT',
	'STAGIER',
	'TRIAGES',
	'HASTIER',
	'AIRIEST',
	'REALIST',
	'RETAILS',
	'SALTIER',
	'SALTIRE',
	'SLATIER',
	'TAILERS',
	'IMARETS',
	'MAESTRI',
	'MISRATE',
	'SMARTIE',
	'ANESTRI',
	'ANTSIER',
	'NASTIER',
	'RATINES',
	'RETAINS',
	'RETINAS',
	'RETSINA',
	'STAINER',
	'STEARIN',
	'PARTIES',
	'PASTIER',
	'PIASTER',
	'PIASTRE',
	'PIRATES',
	'PRATIES',
	'TRAIPSE',
	'ARTSIER',
	'TARRIES',
	'TARSIER',
	'ARTSIES',
	'SATIRES',
	'ARTIEST',
	'ARTISTE',
	'ATTIRES',
	'IRATEST',
	'RATITES',
	'STRIATE',
	'TASTIER',
	'RAVIEST',
	'VASTIER',
	'VERITAS',
	'WAISTER',
	'WAITERS',
	'WARIEST',
	'WASTRIE',
	'AAH',
	'AAL',
	'AAS',
	'ABA',
	'ABS',
	'ABY',
	'ACE',
	'ACT',
	'ADD',
	'ADO',
	'ADS',
	'ADZ',
	'AFF',
	'AFT',
	'AGA',
	'AGE',
	'AGO',
	'AGS',
	'AHA',
	'AHI',
	'AHS',
	'AID',
	'AIL',
	'AIM',
	'AIN',
	'AIR',
	'AIS',
	'AIT',
	'AJI',
	'ALA',
	'ALB',
	'ALE',
	'ALL',
	'ALP',
	'ALS',
	'ALT',
	'AMA',
	'AMI',
	'AMP',
	'AMU',
	'ANA',
	'AND',
	'ANE',
	'ANI',
	'ANT',
	'ANY',
	'APE',
	'APO',
	'APP',
	'APT',
	'ARB',
	'ARC',
	'ARE',
	'ARF',
	'ARK',
	'ARM',
	'ARS',
	'ART',
	'ASH',
	'ASK',
	'ASP',
	'ASS',
	'ATE',
	'ATT',
	'AUK',
	'AVA',
	'AVE',
	'AVO',
	'AWA',
	'AWE',
	'AWL',
	'AWN',
	'AXE',
	'AYE',
	'AYS',
	'AZO',
	'BAA',
	'BAD',
	'BAG',
	'BAH',
	'BAL',
	'BAM',
	'BAN',
	'BAP',
	'BAR',
	'BAS',
	'BAT',
	'BAY',
	'BED',
	'BEE',
	'BEG',
	'BEL',
	'BEN',
	'BES',
	'BET',
	'BEY',
	'BIB',
	'BID',
	'BIG',
	'BIN',
	'BIO',
	'BIS',
	'BIT',
	'BIZ',
	'BOA',
	'BOB',
	'BOD',
	'BOG',
	'BOO',
	'BOP',
	'BOS',
	'BOT',
	'BOW',
	'BOX',
	'BOY',
	'BRA',
	'BRO',
	'BRR',
	'BUB',
	'BUD',
	'BUG',
	'BUM',
	'BUN',
	'BUR',
	'BUS',
	'BUT',
	'BUY',
	'BYE',
	'BYS',
	'CAB',
	'CAD',
	'CAF',
	'CAL',
	'CAM',
	'CAN',
	'CAP',
	'CAR',
	'CAT',
	'CAW',
	'CAY',
	'CEE',
	'CEL',
	'CEP',
	'CHI',
	'CIG',
	'CIS',
	'COB',
	'COD',
	'COG',
	'COL',
	'CON',
	'COO',
	'COP',
	'COR',
	'COS',
	'COT',
	'COW',
	'COX',
	'COY',
	'COZ',
	'CRU',
	'CRY',
	'CUB',
	'CUD',
	'CUE',
	'CUM',
	'CUP',
	'CUR',
	'CUT',
	'CUZ',
	'CWM',
	'DAB',
	'DAD',
	'DAG',
	'DAH',
	'DAK',
	'DAL',
	'DAM',
	'DAN',
	'DAP',
	'DAS',
	'DAW',
	'DAY',
	'DEB',
	'DEE',
	'DEF',
	'DEL',
	'DEN',
	'DEP',
	'DEV',
	'DEW',
	'DEX',
	'DEY',
	'DIB',
	'DID',
	'DIE',
	'DIF',
	'DIG',
	'DIM',
	'DIN',
	'DIP',
	'DIS',
	'DIT',
	'DOC',
	'DOE',
	'DOG',
	'DOH',
	'DOL',
	'DOM',
	'DON',
	'DOR',
	'DOS',
	'DOT',
	'DOW',
	'DRY',
	'DUB',
	'DUD',
	'DUE',
	'DUG',
	'DUH',
	'DUI',
	'DUM',
	'DUN',
	'DUO',
	'DUP',
	'DYE',
	'EAR',
	'EAT',
	'EAU',
	'EBB',
	'ECO',
	'ECU',
	'EDH',
	'EDS',
	'EEK',
	'EEL',
	'EEW',
	'EFF',
	'EFS',
	'EFT',
	'EGG',
	'EGO',
	'EKE',
	'ELD',
	'ELF',
	'ELK',
	'ELL',
	'ELM',
	'ELS',
	'EME',
	'EMO',
	'EMS',
	'EMU',
	'END',
	'ENG',
	'ENS',
	'EON',
	'ERA',
	'ERE',
	'ERG',
	'ERN',
	'ERR',
	'ERS',
	'ESS',
	'EST',
	'ETA',
	'ETH',
	'EVE',
	'EWE',
	'EYE',
	'FAB',
	'FAD',
	'FAG',
	'FAH',
	'FAN',
	'FAR',
	'FAS',
	'FAT',
	'FAX',
	'FAY',
	'FED',
	'FEE',
	'FEH',
	'FEM',
	'FEN',
	'FER',
	'FES',
	'FET',
	'FEU',
	'FEW',
	'FEY',
	'FEZ',
	'FIB',
	'FID',
	'FIE',
	'FIG',
	'FIL',
	'FIN',
	'FIR',
	'FIT',
	'FIX',
	'FIZ',
	'FLU',
	'FLY',
	'FOB',
	'FOE',
	'FOG',
	'FOH',
	'FON',
	'FOO',
	'FOP',
	'FOR',
	'FOU',
	'FOX',
	'FOY',
	'FRO',
	'FRY',
	'FUB',
	'FUD',
	'FUG',
	'FUN',
	'FUR',
	'GAB',
	'GAD',
	'GAE',
	'GAG',
	'GAL',
	'GAM',
	'GAN',
	'GAP',
	'GAR',
	'GAS',
	'GAT',
	'GAY',
	'GED',
	'GEE',
	'GEL',
	'GEM',
	'GEN',
	'GET',
	'GEY',
	'GHI',
	'GIB',
	'GID',
	'GIE',
	'GIF',
	'GIG',
	'GIN',
	'GIP',
	'GIS',
	'GIT',
	'GNU',
	'GOA',
	'GOB',
	'GOD',
	'GOO',
	'GOR',
	'GOS',
	'GOT',
	'GOX',
	'GRR',
	'GUL',
	'GUM',
	'GUN',
	'GUT',
	'GUV',
	'GUY',
	'GYM',
	'GYP',
	'HAD',
	'HAE',
	'HAG',
	'HAH',
	'HAJ',
	'HAM',
	'HAO',
	'HAP',
	'HAS',
	'HAT',
	'HAW',
	'HAY',
	'HEH',
	'HEM',
	'HEN',
	'HEP',
	'HER',
	'HES',
	'HET',
	'HEW',
	'HEX',
	'HEY',
	'HIC',
	'HID',
	'HIE',
	'HIM',
	'HIN',
	'HIP',
	'HIS',
	'HIT',
	'HMM',
	'HOB',
	'HOD',
	'HOE',
	'HOG',
	'HOM',
	'HON',
	'HOO',
	'HOP',
	'HOT',
	'HOW',
	'HOY',
	'HUB',
	'HUE',
	'HUG',
	'HUH',
	'HUM',
	'HUN',
	'HUP',
	'HUT',
	'HYP',
	'ICE',
	'ICH',
	'ICK',
	'ICY',
	'IDS',
	'IFF',
	'IFS',
	'IGG',
	'ILK',
	'ILL',
	'IMP',
	'INK',
	'INN',
	'INS',
	'ION',
	'IRE',
	'IRK',
	'ISM',
	'ITS',
	'IVY',
	'JAB',
	'JAG',
	'JAM',
	'JAR',
	'JAW',
	'JAY',
	'JEE',
	'JET',
	'JEU',
	'JIB',
	'JIG',
	'JIN',
	'JOB',
	'JOE',
	'JOG',
	'JOT',
	'JOW',
	'JOY',
	'JUG',
	'JUN',
	'JUS',
	'JUT',
	'KAB',
	'KAE',
	'KAF',
	'KAS',
	'KAT',
	'KAY',
	'KEA',
	'KEF',
	'KEG',
	'KEN',
	'KEP',
	'KEX',
	'KEY',
	'KHI',
	'KID',
	'KIF',
	'KIN',
	'KIP',
	'KIR',
	'KIS',
	'KIT',
	'KOA',
	'KOB',
	'KOI',
	'KOP',
	'KOR',
	'KOS',
	'KUE',
	'KYE',
	'LAB',
	'LAC',
	'LAD',
	'LAG',
	'LAH',
	'LAM',
	'LAP',
	'LAR',
	'LAS',
	'LAT',
	'LAV',
	'LAW',
	'LAX',
	'LAY',
	'LEA',
	'LED',
	'LEE',
	'LEG',
	'LEI',
	'LEK',
	'LET',
	'LEU',
	'LEV',
	'LEX',
	'LEY',
	'LIB',
	'LID',
	'LIE',
	'LIN',
	'LIP',
	'LIS',
	'LIT',
	'LOB',
	'LOG',
	'LOO',
	'LOP',
	'LOR',
	'LOT',
	'LOW',
	'LOX',
	'LUD',
	'LUG',
	'LUM',
	'LUN',
	'LUV',
	'LUX',
	'LYE',
	'MAC',
	'MAD',
	'MAE',
	'MAG',
	'MAM',
	'MAN',
	'MAP',
	'MAR',
	'MAS',
	'MAT',
	'MAW',
	'MAX',
	'MAY',
	'MED',
	'MEG',
	'MEH',
	'MEL',
	'MEM',
	'MEN',
	'MES',
	'MET',
	'MEW',
	'MHO',
	'MIB',
	'MIC',
	'MID',
	'MIG',
	'MIL',
	'MIM',
	'MIR',
	'MIS',
	'MIX',
	'MMM',
	'MOA',
	'MOB',
	'MOC',
	'MOD',
	'MOG',
	'MOI',
	'MOL',
	'MOM',
	'MON',
	'MOO',
	'MOP',
	'MOR',
	'MOS',
	'MOT',
	'MOW',
	'MUD',
	'MUG',
	'MUM',
	'MUN',
	'MUS',
	'MUT',
	'MUX',
	'MYC',
	'NAB',
	'NAE',
	'NAG',
	'NAH',
	'NAM',
	'NAN',
	'NAP',
	'NAV',
	'NAW',
	'NAY',
	'NEB',
	'NEE',
	'NEG',
	'NET',
	'NEW',
	'NIB',
	'NIL',
	'NIM',
	'NIP',
	'NIT',
	'NIX',
	'NOB',
	'NOD',
	'NOG',
	'NOH',
	'NOM',
	'NOO',
	'NOR',
	'NOS',
	'NOT',
	'NOW',
	'NTH',
	'NUB',
	'NUG',
	'NUN',
	'NUS',
	'NUT',
	'OAF',
	'OAK',
	'OAR',
	'OAT',
	'OBA',
	'OBE',
	'OBI',
	'OCA',
	'OCH',
	'ODA',
	'ODD',
	'ODE',
	'ODS',
	'OES',
	'OFF',
	'OFT',
	'OHM',
	'OHO',
	'OHS',
	'OIK',
	'OIL',
	'OKA',
	'OKE',
	'OLD',
	'OLE',
	'OMA',
	'OMS',
	'ONE',
	'ONO',
	'ONS',
	'OOF',
	'OOH',
	'OOT',
	'OPA',
	'OPE',
	'OPS',
	'OPT',
	'ORA',
	'ORB',
	'ORC',
	'ORE',
	'ORG',
	'ORS',
	'ORT',
	'OSE',
	'OUD',
	'OUR',
	'OUT',
	'OVA',
	'OWE',
	'OWL',
	'OWN',
	'OWT',
	'OXO',
	'OXY',
	'PAC',
	'PAD',
	'PAH',
	'PAK',
	'PAL',
	'PAM',
	'PAN',
	'PAP',
	'PAR',
	'PAS',
	'PAT',
	'PAW',
	'PAX',
	'PAY',
	'PEA',
	'PEC',
	'PED',
	'PEE',
	'PEG',
	'PEH',
	'PEN',
	'PEP',
	'PER',
	'PES',
	'PET',
	'PEW',
	'PHI',
	'PHO',
	'PHT',
	'PIA',
	'PIC',
	'PIE',
	'PIG',
	'PIN',
	'PIP',
	'PIS',
	'PIT',
	'PIU',
	'PIX',
	'PLY',
	'POD',
	'POH',
	'POI',
	'POL',
	'POM',
	'POO',
	'POP',
	'POS',
	'POT',
	'POW',
	'POX',
	'PRO',
	'PRY',
	'PSI',
	'PST',
	'PUB',
	'PUD',
	'PUG',
	'PUL',
	'PUN',
	'PUP',
	'PUR',
	'PUS',
	'PUT',
	'PYA',
	'PYE',
	'PYX',
	'QAT',
	'QIS',
	'QUA',
	'RAD',
	'RAG',
	'RAH',
	'RAI',
	'RAJ',
	'RAM',
	'RAN',
	'RAP',
	'RAS',
	'RAT',
	'RAW',
	'RAX',
	'RAY',
	'REB',
	'REC',
	'RED',
	'REE',
	'REF',
	'REG',
	'REI',
	'REM',
	'REP',
	'RES',
	'RET',
	'REV',
	'REX',
	'REZ',
	'RHO',
	'RIA',
	'RIB',
	'RID',
	'RIF',
	'RIG',
	'RIM',
	'RIN',
	'RIP',
	'ROB',
	'ROC',
	'ROD',
	'ROE',
	'ROM',
	'ROO',
	'ROT',
	'ROW',
	'RUB',
	'RUE',
	'RUG',
	'RUM',
	'RUN',
	'RUT',
	'RYA',
	'RYE',
	'RYU',
	'SAB',
	'SAC',
	'SAD',
	'SAE',
	'SAG',
	'SAL',
	'SAN',
	'SAP',
	'SAT',
	'SAU',
	'SAW',
	'SAX',
	'SAY',
	'SEA',
	'SEC',
	'SEE',
	'SEG',
	'SEI',
	'SEL',
	'SEN',
	'SER',
	'SET',
	'SEV',
	'SEW',
	'SEX',
	'SEZ',
	'SHA',
	'SHE',
	'SHH',
	'SHO',
	'SHY',
	'SIB',
	'SIC',
	'SIG',
	'SIM',
	'SIN',
	'SIP',
	'SIR',
	'SIS',
	'SIT',
	'SIX',
	'SKA',
	'SKI',
	'SKY',
	'SLY',
	'SOB',
	'SOC',
	'SOD',
	'SOH',
	'SOL',
	'SOM',
	'SON',
	'SOP',
	'SOS',
	'SOT',
	'SOU',
	'SOW',
	'SOX',
	'SOY',
	'SPA',
	'SPY',
	'SRI',
	'STY',
	'SUB',
	'SUE',
	'SUK',
	'SUM',
	'SUN',
	'SUP',
	'SUQ',
	'SUS',
	'SYN',
	'TAB',
	'TAD',
	'TAE',
	'TAG',
	'TAJ',
	'TAM',
	'TAN',
	'TAO',
	'TAP',
	'TAR',
	'TAS',
	'TAT',
	'TAU',
	'TAV',
	'TAW',
	'TAX',
	'TEA',
	'TEC',
	'TED',
	'TEE',
	'TEG',
	'TEL',
	'TEN',
	'TES',
	'TET',
	'TEW',
	'THE',
	'THO',
	'THY',
	'TIC',
	'TIE',
	'TIL',
	'TIN',
	'TIP',
	'TIS',
	'TIT',
	'TIX',
	'TIZ',
	'TOD',
	'TOE',
	'TOG',
	'TOM',
	'TON',
	'TOO',
	'TOP',
	'TOR',
	'TOT',
	'TOW',
	'TOY',
	'TRY',
	'TSK',
	'TUB',
	'TUG',
	'TUI',
	'TUM',
	'TUN',
	'TUP',
	'TUT',
	'TUX',
	'TWA',
	'TWO',
	'TYE',
	'UDO',
	'UGH',
	'UKE',
	'ULU',
	'UMM',
	'UMP',
	'UMS',
	'UNI',
	'UNS',
	'UPO',
	'UPS',
	'URB',
	'URD',
	'URN',
	'URP',
	'USE',
	'UTA',
	'UTE',
	'UTS',
	'VAC',
	'VAN',
	'VAR',
	'VAS',
	'VAT',
	'VAU',
	'VAV',
	'VAW',
	'VEE',
	'VEG',
	'VET',
	'VEX',
	'VIA',
	'VID',
	'VIE',
	'VIG',
	'VIM',
	'VIN',
	'VIS',
	'VOE',
	'VOG',
	'VOW',
	'VOX',
	'VUG',
	'VUM',
	'WAB',
	'WAD',
	'WAE',
	'WAG',
	'WAN',
	'WAP',
	'WAR',
	'WAS',
	'WAT',
	'WAW',
	'WAX',
	'WAY',
	'WEB',
	'WED',
	'WEE',
	'WEN',
	'WET',
	'WHA',
	'WHO',
	'WHY',
	'WIG',
	'WIN',
	'WIS',
	'WIT',
	'WIZ',
	'WOE',
	'WOK',
	'WON',
	'WOO',
	'WOS',
	'WOT',
	'WOW',
	'WRY',
	'WUD',
	'WUZ',
	'WYE',
	'WYN',
	'XED',
	'XIS',
	'YAG',
	'YAH',
	'YAK',
	'YAM',
	'YAP',
	'YAR',
	'YAS',
	'YAW',
	'YAY',
	'YEA',
	'YEH',
	'YEN',
	'YEP',
	'YER',
	'YES',
	'YET',
	'YEW',
	'YEZ',
	'YIN',
	'YIP',
	'YOB',
	'YOD',
	'YOK',
	'YOM',
	'YON',
	'YOU',
	'YOW',
	'YUK',
	'YUM',
	'YUP',
	'ZAG',
	'ZAP',
	'ZAS',
	'ZAX',
	'ZED',
	'ZEE',
	'ZEK',
	'ZEN',
	'ZEP',
	'ZIG',
	'ZIN',
	'ZIP',
	'ZIT',
	'ZOA',
	'ZOO',
	'ZUZ',
	'ZZZ'
]);

/**
 * TODO: There are essentially three components that we want to abstract away in
 * the dicitonary implementation to swap out depending on context:
 * 1. Data persistence: Where is this stored? Localstorage? IndexedDB? A remote API?
 *    This is essnetially the constructor here.
 * 2. Data structure: How do we represent the data once loaded to perform
 *    queries against it? This is the search method here.
 *
 * (optional): Should caching strategy also be configured?
 *
 * This is the simplest imaginable implementation right now. We store it
 * in-memory and use a simple map to perform lookups. Though the persistence and
 * structure will likely be coupled in many implementations, it may not be the
 * best long-term solution. For example, we may want to store data in a central
 * DB for storage and support _both_ a server-side search using that DBs query
 * language _and_ a client-side search where we load the whole DB into memory.
 */
export class SimpleDictionary implements Dictionary {
	private wordsByAlphagram: Map<string, [string]>;

	constructor() {
		this.wordsByAlphagram = new Map();
		for (const word of WORDS) {
			const alphagrammed = alphagram(word);
			if (this.wordsByAlphagram.has(alphagrammed)) {
				this.wordsByAlphagram.get(alphagrammed)!.push(word);
			} else {
				this.wordsByAlphagram.set(alphagrammed, [word]);
			}
		}
	}

	// Should be async eventually
	public search({ alphagram: searchAlphagram }: SearchSpec): Word[] {
		// This is like the worst implementation ever, optimize this
		// It's also broken if there are two ??
		const toReturn = [];
		for (const letter of 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') {
			const alphagrammed = alphagram(searchAlphagram.replace('?', letter));
			toReturn.push(
				...(this.wordsByAlphagram.get(alphagrammed) ?? []).map((word) => ({
					word,
					alphagram: alphagrammed
				}))
			);
		}
		console.log('returning', toReturn);
		return toReturn;
	}
}
